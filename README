AFTER(1)                    General Commands Manual                   AFTER(1)

NNAAMMEE
     aafftteerr â€“ after process dies echo a string to standard output

SSYYNNOOPPSSIISS
     aafftteerr [--hh] [--vv] [--pp _p_i_d | --nn _p_r_o_g_r_a_m___n_a_m_e] --ee _s_t_r_i_n_g

DDEESSCCRRIIPPTTIIOONN
     aafftteerr watches the process list for the given _p_i_d or _p_r_o_g_r_a_m___n_a_m_e.  When
     the process is no longer in the process list aafftteerr outputs --ee _s_t_r_i_n_g to
     standard output.  If both _p_i_d and _p_r_o_g_r_a_m___n_a_m_e are specified aafftteerr will
     default to watching the process specified by _p_r_o_g_r_a_m___n_a_m_e.

     In the case of using _p_r_o_g_r_a_m___n_a_m_e if there are multiple programs with
     this name running all of them will have to exit before aafftteerr will echo
     _s_t_r_i_n_g.

OOPPTTIIOONNSS
     --pp _p_i_d  Watch _p_i_d.

     --nn _p_r_o_g_r_a_m___n_a_m_e
             Watch _p_r_o_g_r_a_m___n_a_m_e.

     --hh      Show usage information.

     --vv      Be verbose.

EEXXAAMMPPLLEESS
     Following are some examples to illustrate how aafftteerr could be useful (or
     not).

     Notify when your compiler has finished running:

           $ after -n clang -e "build is finished!"

     The power of this simple tool can be observed when the output is piped
     into other programs. For instance; putting your machine to sleep after
     your update script has finished running:

           $ after -p 2027 -e "doas zzz" | sh

SSEEEE AALLSSOO
     kvm_getprocs(3), kvm_open(3)

OpenBSD 6.8                     January 5, 2021                    OpenBSD 6.8
